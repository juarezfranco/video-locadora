package interfaces;

import controle.ControladorCopiaFilme;
import dao.CopiaFilmeDao;
import dao.FilmeDao;
import entidade.CopiaFilme;
import entidade.Filme;
import entidade.Visao;
import interfaces.dialogo.DialogRemoverCopiaFilme;
import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.Calendar;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author juarez
 */
public class JanelaCadastroCopiasFilmes extends javax.swing.JDialog {
   private enum Estado{INSERINDO,EDITANDO};
   
   private ControladorCopiaFilme controlador;
   public static Filme filme;
   private Estado estado;
   /**
    * Creates new form JanelaCadastroCopiasFilmes
    */
   public JanelaCadastroCopiasFilmes(ControladorCopiaFilme controlador) {
      super(new javax.swing.JFrame(), true);
      this.controlador = controlador;
      initComponents();
      limpaCampos();
   }

   /**
    * This method is called from within the constructor to initialize the form.
    * WARNING: Do NOT modify this code. The content of this method is always
    * regenerated by the Form Editor.
    */
   @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialog1 = new javax.swing.JDialog();
        abaTabbedPane = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        consultar_copiasButton = new javax.swing.JButton();
        consulta_filmesComboBox = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabela_de_consultaTable = new javax.swing.JTable();
        consulta_copiaslabel = new java.awt.Label();
        nova_consultaButton = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        valorLabel = new javax.swing.JLabel();
        dataLabel = new javax.swing.JLabel();
        filmeLabel = new javax.swing.JLabel();
        cadastro_filmesComboBox = new javax.swing.JComboBox();
        valorTextField = new javax.swing.JFormattedTextField();
        jButton1 = new javax.swing.JButton();
        dataTextField = new javax.swing.JTextField();
        idTextField = new javax.swing.JTextField();
        idLabel = new javax.swing.JLabel();
        qtd_adquiridaSpinner = new javax.swing.JSpinner();
        qtd_adquiridaLabel = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        remover_copiaButton = new javax.swing.JButton();
        nova_copiaButton = new javax.swing.JButton();
        gravar_copiaButton = new javax.swing.JButton();

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        abaTabbedPane.setTabPlacement(javax.swing.JTabbedPane.LEFT);
        abaTabbedPane.setToolTipText("");
        abaTabbedPane.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N

        consultar_copiasButton.setText("Consultar");
        consultar_copiasButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                consultar_copiasButtonActionPerformed(evt);
            }
        });

        consulta_filmesComboBox.setModel(new DefaultComboBoxModel(FilmeDao.
            getVisoes()));

    tabela_de_consultaTable.setModel(new javax.swing.table.DefaultTableModel(
        new Object [][] {
            {},
            {},
            {},
            {},
            {},
            {},
            {},
            {},
            {},
            {}
        },
        new String [] {

        }
    ));
    tabela_de_consultaTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
    tabela_de_consultaTable.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            ir_paraCadastroEVT(evt);
        }
    });
    jScrollPane1.setViewportView(tabela_de_consultaTable);

    consulta_copiaslabel.setFont(new java.awt.Font("Ubuntu", 1, 14)); // NOI18N
    consulta_copiaslabel.setText("Consultar cópias");

    nova_consultaButton.setText("+");
    nova_consultaButton.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            nova_consultaButtonActionPerformed(evt);
        }
    });

    javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
    jPanel2.setLayout(jPanel2Layout);
    jPanel2Layout.setHorizontalGroup(
        jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel2Layout.createSequentialGroup()
            .addGap(34, 34, 34)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addComponent(consulta_copiaslabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addComponent(consulta_filmesComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(nova_consultaButton, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(consultar_copiasButton, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(37, 37, 37))))
        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 701, Short.MAX_VALUE)
    );
    jPanel2Layout.setVerticalGroup(
        jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
            .addGap(32, 32, 32)
            .addComponent(consulta_copiaslabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(consulta_filmesComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(consultar_copiasButton)
                .addComponent(nova_consultaButton))
            .addGap(23, 23, 23)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 428, Short.MAX_VALUE))
    );

    abaTabbedPane.addTab("    Consulta    ", jPanel2);

    valorLabel.setText("Valor (R$)");

    dataLabel.setText("Data (dd/mm/AAAA)");

    filmeLabel.setText("Filme");

    cadastro_filmesComboBox.setModel(new DefaultComboBoxModel(FilmeDao.
        getVisoes()));

valorTextField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));

jButton1.setText("obter");
jButton1.addActionListener(new java.awt.event.ActionListener() {
    public void actionPerformed(java.awt.event.ActionEvent evt) {
        obterDataEHoraEVT(evt);
    }
    });

    dataTextField.setEnabled(false);

    idTextField.setEnabled(false);

    idLabel.setText("id");

    qtd_adquiridaLabel.setText("Qtd. de novas cópias adquiridas");

    remover_copiaButton.setText("REMOVER");
    remover_copiaButton.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            remover_copiaButtonActionPerformed(evt);
        }
    });

    nova_copiaButton.setText("+");
    nova_copiaButton.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            nova_copiaButtonActionPerformed(evt);
        }
    });

    gravar_copiaButton.setText("GRAVAR");
    gravar_copiaButton.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            gravar_copiaButtonActionPerformed(evt);
        }
    });

    javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
    jPanel4.setLayout(jPanel4Layout);
    jPanel4Layout.setHorizontalGroup(
        jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
            .addContainerGap(40, Short.MAX_VALUE)
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                .addComponent(gravar_copiaButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel4Layout.createSequentialGroup()
                    .addComponent(nova_copiaButton, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(35, 35, 35)
                    .addComponent(remover_copiaButton, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addGap(40, 40, 40))
    );
    jPanel4Layout.setVerticalGroup(
        jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel4Layout.createSequentialGroup()
            .addGap(29, 29, 29)
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(nova_copiaButton)
                .addComponent(remover_copiaButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGap(18, 18, 18)
            .addComponent(gravar_copiaButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap(32, Short.MAX_VALUE))
    );

    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
    jPanel1.setLayout(jPanel1Layout);
    jPanel1Layout.setHorizontalGroup(
        jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel1Layout.createSequentialGroup()
            .addGap(20, 20, 20)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(cadastro_filmesComboBox, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(valorLabel)
                        .addComponent(valorTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(145, 535, Short.MAX_VALUE))
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(filmeLabel)
                        .addComponent(idLabel)
                        .addComponent(idTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(qtd_adquiridaLabel))
                    .addGap(0, 0, Short.MAX_VALUE))
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(dataTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jButton1))
                        .addComponent(dataLabel)
                        .addComponent(qtd_adquiridaSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addGap(26, 26, 26))
    );
    jPanel1Layout.setVerticalGroup(
        jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel1Layout.createSequentialGroup()
            .addGap(47, 47, 47)
            .addComponent(idLabel)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(idTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(filmeLabel)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(cadastro_filmesComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(38, 38, 38)
            .addComponent(valorLabel)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(valorTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(37, 37, 37)
            .addComponent(qtd_adquiridaLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addComponent(qtd_adquiridaSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(37, 37, 37)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jButton1)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(dataLabel)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(dataTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGap(0, 66, Short.MAX_VALUE))
    );

    abaTabbedPane.addTab("Cadastro", jPanel1);

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addComponent(abaTabbedPane)
            .addGap(0, 0, 0))
    );
    layout.setVerticalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addComponent(abaTabbedPane)
            .addGap(0, 0, 0))
    );

    pack();
    setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

   private void gravar_copiaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gravar_copiaButtonActionPerformed
      if(isCamposVazio()){
         JOptionPane.showMessageDialog(null, "Preencha todos os campos");
         return;
      }
      
      //Recupera visao do filme selecionado no comboBox
      Visao<Integer> visao = (Visao<Integer>)cadastro_filmesComboBox.getSelectedItem();
      //Recupera filme no banco de dados com a chave da visao que foi recuperada anteriormente
      Filme filme = FilmeDao.getFilme(visao.getChave());

      //inicializa variaveis para construir a cópia do filme
      
      float valorAquisicao = Float.parseFloat(valorTextField.getText());
      int quantidade = Integer.parseInt(qtd_adquiridaSpinner.getValue().toString());
      Timestamp data = Timestamp.valueOf(dataTextField.getText());
      //constrói copia do filme
      CopiaFilme copiaFilme = new CopiaFilme(filme, valorAquisicao, 
                                             CopiaFilme.Estado.disponivel, data, null);
      
      if(estado == estado.INSERINDO){
         
         cadastro_filmesComboBox.setEnabled(true);
         if(controlador.inserir(copiaFilme, quantidade)){
            JOptionPane.showMessageDialog(this, "Cópia foi salvo com sucesso.");
            atualizaTabela();
         }else{
            JOptionPane.showMessageDialog(this, "Não foi possível salvar cópia");
            
         }
         
      }
      if(estado==estado.EDITANDO ){
         int idCopia = Integer.parseInt(idTextField.getText());
         CopiaFilme copia = CopiaFilmeDao.getCopiaFilme(idCopia);
         if(copia.getEstado()==CopiaFilme.Estado.disponivel){
            int sequencial = Integer.parseInt(idTextField.getText());
            copiaFilme.setId(sequencial);
            if(controlador.alterar(copiaFilme)){
               atualizaTabela();
               JOptionPane.showMessageDialog(this, "Cópia foi alterada com sucesso.");
               return;
            }
            else{
               JOptionPane.showMessageDialog(this, "Não foi possível alterar cópia do filme.");
               return;
            }
         }else{
            JOptionPane.showMessageDialog(this, "A cópia não pode ser alterada pois existe Dependencias, ou esta locada ou esta reservada");
         }
      }
      estado = estado.INSERINDO;
      limpaCampos();
      return;
   }//GEN-LAST:event_gravar_copiaButtonActionPerformed
   
   private DefaultTableModel construirTabela(){
      //constrói modelo da tabela e suas respectivas colunas
      DefaultTableModel modelo = new DefaultTableModel();
      modelo.addColumn("ID");
      modelo.addColumn("Filme");
      modelo.addColumn("Gênero");
      modelo.addColumn("Data de aquisição");
      modelo.addColumn("Valor");
      modelo.addColumn("Estado");
      modelo.rowsRemoved(null);

      return modelo;
   }
   private void atualizaTabela(){
      DefaultTableModel modelo = construirTabela();
      
      int idFilme;
      Visao<Integer> itemSelecionado;
      if(consulta_filmesComboBox.getSelectedIndex()==-1)
         idFilme = -1;
      else{
          itemSelecionado = (Visao<Integer>)consulta_filmesComboBox.getSelectedItem();
          idFilme = itemSelecionado.getChave();
      }
      //Recupera todos as cópias dos filmes que possuem o id do filme selecionado no combo box de consulta
      ArrayList<CopiaFilme> arrayCopias = controlador.getCopiasFilmes(idFilme);

      //O trecho abaixo adiciona as linhas da tabela

         
      for(CopiaFilme c : arrayCopias){
            modelo.addRow(new Object[]{c.getId(), c.getFilme().getTitulo(), c.getFilme().getAssunto(),
                                       c.getDataAquisicao(), c.getValorAquisicao(), c.getEstado()});  
      
      tabela_de_consultaTable.setModel(modelo);
      }
   }
   
   private void obterDataEHoraEVT(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_obterDataEHoraEVT
      String tempo = new Timestamp(Calendar.getInstance().getTimeInMillis()).toString();
      dataTextField.setText(tempo);
   }//GEN-LAST:event_obterDataEHoraEVT

   private void remover_copiaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_remover_copiaButtonActionPerformed
      if(estado == Estado.EDITANDO){
         
         int idCopia = Integer.parseInt(idTextField.getText());
         CopiaFilme copia = CopiaFilmeDao.getCopiaFilme(idCopia);
         if(copia.getEstado()==CopiaFilme.Estado.disponivel){
            DialogRemoverCopiaFilme dialogo = new DialogRemoverCopiaFilme(true, idCopia, controlador);
            if(dialogo.isRemoved)
               limpaCampos();
         
         
         }else{
            JOptionPane.showMessageDialog(null, "Não foi possível Remover, pois esta Cópia existe DEPENDENCIAS "
                    + "em reservas ou locações. "
                    + "A cópia precisa estar disponivel para ser removida.", "Informação", JOptionPane.ERROR_MESSAGE); 
         }
         
      }
   }//GEN-LAST:event_remover_copiaButtonActionPerformed

   private void consultar_copiasButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_consultar_copiasButtonActionPerformed
      atualizaTabela();
   }//GEN-LAST:event_consultar_copiasButtonActionPerformed

   private void ir_paraCadastroEVT(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ir_paraCadastroEVT
      int linhaSelecionada = tabela_de_consultaTable.getSelectedRow();
      int idCopia = Integer.parseInt(tabela_de_consultaTable.getValueAt(linhaSelecionada, 0).toString());
      CopiaFilme copia = controlador.getCopiaFilme(idCopia);
      
      //inicializa conteudo dos componentes da aba de Cadastro pegando valores da tabela
      idTextField.setText(copia.getId()+"");
      valorTextField.setText(copia.getValorAquisicao()+"");
      dataTextField.setText(copia.getDataAquisicao()+"");
      
      //posiciona comboBox na visao
      
      Visao<Integer> visaoFilme = copia.getFilme().getVisao();
      cadastro_filmesComboBox.addItem(visaoFilme);
      cadastro_filmesComboBox.setSelectedIndex(cadastro_filmesComboBox.getItemCount()-1);
      cadastro_filmesComboBox.setEnabled(false);
      qtd_adquiridaSpinner.setEnabled(false);
      
      estado = Estado.EDITANDO;
      abaTabbedPane.setSelectedIndex(1);
      
   }//GEN-LAST:event_ir_paraCadastroEVT

   private void nova_copiaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nova_copiaButtonActionPerformed
      limpaCampos();
      estado = Estado.INSERINDO;
            
   }//GEN-LAST:event_nova_copiaButtonActionPerformed

   private void nova_consultaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nova_consultaButtonActionPerformed
      limpaCampos();
      estado = Estado.INSERINDO;
   }//GEN-LAST:event_nova_consultaButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTabbedPane abaTabbedPane;
    private javax.swing.JComboBox cadastro_filmesComboBox;
    private java.awt.Label consulta_copiaslabel;
    private javax.swing.JComboBox consulta_filmesComboBox;
    private javax.swing.JButton consultar_copiasButton;
    private javax.swing.JLabel dataLabel;
    private javax.swing.JTextField dataTextField;
    private javax.swing.JLabel filmeLabel;
    private javax.swing.JButton gravar_copiaButton;
    private javax.swing.JLabel idLabel;
    private javax.swing.JTextField idTextField;
    private javax.swing.JButton jButton1;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton nova_consultaButton;
    private javax.swing.JButton nova_copiaButton;
    private javax.swing.JLabel qtd_adquiridaLabel;
    private javax.swing.JSpinner qtd_adquiridaSpinner;
    private javax.swing.JButton remover_copiaButton;
    private javax.swing.JTable tabela_de_consultaTable;
    private javax.swing.JLabel valorLabel;
    private javax.swing.JFormattedTextField valorTextField;
    // End of variables declaration//GEN-END:variables

   private boolean isCamposVazio() {
      if(cadastro_filmesComboBox.getSelectedIndex()<0 || valorTextField.getText().isEmpty() 
             || dataTextField.getText().isEmpty() )
         return true;
      return false;
   }
   private void preencher_campos_textos(CopiaFilme copia){
      idTextField.setText(String.valueOf(copia.getId()));
      valorTextField.setText(String.valueOf(copia.getValorAquisicao()));
      qtd_adquiridaSpinner.setValue(0);
      dataTextField.setText(String.valueOf(copia.getDataAquisicao()));
   }
   private void limpaCampos(){
      qtd_adquiridaSpinner.setEnabled(true);
      cadastro_filmesComboBox.setEnabled(true);
      cadastro_filmesComboBox.setSelectedIndex(-1);
      idTextField.setText("");
      valorTextField.setText("");
      qtd_adquiridaSpinner.setValue(0);
      dataTextField.setText("");
      DefaultTableModel modelo = new DefaultTableModel();
      modelo.addColumn("ID");
      modelo.addColumn("Filme");
      modelo.addColumn("Gênero");
      modelo.addColumn("Data de aquisição");
      modelo.addColumn("Valor");
      modelo.addColumn("Estado");
      modelo.rowsRemoved(null);
      tabela_de_consultaTable.setModel(modelo);
      consulta_filmesComboBox.setSelectedIndex(-1);
      estado = Estado.INSERINDO;
   }
   
}
